
Memory Configuration

Name             Origin             Length             Attributes
RAM              0x0000000000008000 0x000000001fff8000
PERIPHERALS      0x0000000020000000 0x0000000000ffffff
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD build/init.o
LOAD build/kmain.o
                0x0000000000000200                SVC_STACK_SIZE = 0x200
                0x0000000000000200                FIQ_STACK_SIZE = 0x200
                0x0000000000000200                IRQ_STACK_SIZE = 0x200
                0x0000000000008000                . = 0x8000
                0x0000000000008000                __start = .
                0x0000000000008000                __text_start = .

.text           0x0000000000008000      0x32c
 build/init.o(.text*)
 .text          0x0000000000008000       0x10 build/init.o
                0x0000000000008000                CORE0_READY
                0x0000000000008004                CORE1_READY
                0x0000000000008008                CORE2_READY
                0x000000000000800c                CORE3_READY
 .text.boot     0x0000000000008010      0x210 build/init.o
                0x0000000000008010                _start
 *(.text.boot)
 *(.text)
 .text          0x0000000000008220      0x10c build/kmain.o
                0x0000000000008220                uart_init
                0x0000000000008294                uart_putc
                0x00000000000082b8                uart_getc
                0x00000000000082e0                uart_puts
                0x0000000000008308                kmain

.glue_7         0x000000000000832c        0x0
 .glue_7        0x000000000000832c        0x0 linker stubs

.glue_7t        0x000000000000832c        0x0
 .glue_7t       0x000000000000832c        0x0 linker stubs

.vfp11_veneer   0x000000000000832c        0x0
 .vfp11_veneer  0x000000000000832c        0x0 linker stubs

.v4_bx          0x000000000000832c        0x0
 .v4_bx         0x000000000000832c        0x0 linker stubs

.iplt           0x000000000000832c        0x0
 .iplt          0x000000000000832c        0x0 build/init.o

.rel.dyn        0x000000000000832c        0x0
 .rel.iplt      0x000000000000832c        0x0 build/init.o
                0x0000000000009000                . = ALIGN (0x1000)
                0x0000000000009000                __text_end = .
                0x0000000000009000                __rodata_start = .

.rodata
 *(.rodata)

.rodata.str1.4  0x000000000000832c       0x14
 .rodata.str1.4
                0x000000000000832c       0x14 build/kmain.o
                                         0x11 (size before relaxing)
                0x0000000000009000                . = ALIGN (0x1000)
                0x0000000000009000                __rodata_end = .
                0x0000000000009000                __data_start = .

.data           0x0000000000008340        0x0 load address 0x0000000000009000
 *(.data)
 .data          0x0000000000008340        0x0 build/init.o
 .data          0x0000000000008340        0x0 build/kmain.o

.igot.plt       0x0000000000008340        0x0 load address 0x0000000000009cc0
 .igot.plt      0x0000000000008340        0x0 build/init.o
                0x0000000000009000                . = ALIGN (0x1000)
                0x0000000000009000                __data_end = .
                0x0000000000009000                __bss_start = .

.bss            0x0000000000008340        0x0 load address 0x0000000000009cc0
                0x0000000000008340                bss = .
 *(.bss)
 .bss           0x0000000000008340        0x0 build/init.o
 .bss           0x0000000000008340        0x0 build/kmain.o
                0x0000000000009000                . = ALIGN (0x1000)
                0x0000000000009000                __bss_end = .
                0x0000000000009000                __end = .

.stack          0x0000000000008340      0x600 load address 0x0000000000009cc0
                0x0000000000008340                __stack_core0_start__ = .
                0x0000000000008540                . = (. + SVC_STACK_SIZE)
 *fill*         0x0000000000008340      0x200 
                0x0000000000008540                . = ALIGN (0x4)
                0x0000000000008540                __svc_stack_core0__ = .
                0x0000000000008740                . = (. + IRQ_STACK_SIZE)
 *fill*         0x0000000000008540      0x200 
                0x0000000000008740                . = ALIGN (0x4)
                0x0000000000008740                __irq_stack_core0__ = .
                0x0000000000008940                . = (. + FIQ_STACK_SIZE)
 *fill*         0x0000000000008740      0x200 
                0x0000000000008940                . = ALIGN (0x4)
                0x0000000000008940                __fiq_stack_core0__ = .
                0x0000000000008940                __stacks_core0_end__ = .

.stack_core1    0x0000000000008940      0x600 load address 0x000000000000a2c0
                0x0000000000008940                __stack_core1_start__ = .
                0x0000000000008b40                . = (. + SVC_STACK_SIZE)
 *fill*         0x0000000000008940      0x200 
                0x0000000000008b40                . = ALIGN (0x4)
                0x0000000000008b40                __svc_stack_core1__ = .
                0x0000000000008d40                . = (. + IRQ_STACK_SIZE)
 *fill*         0x0000000000008b40      0x200 
                0x0000000000008d40                . = ALIGN (0x4)
                0x0000000000008d40                __irq_stack_core1__ = .
                0x0000000000008f40                . = (. + FIQ_STACK_SIZE)
 *fill*         0x0000000000008d40      0x200 
                0x0000000000008f40                . = ALIGN (0x4)
                0x0000000000008f40                __fiq_stack_core1__ = .
                0x0000000000008f40                __stacks_core1_end__ = .

.stack_core2    0x0000000000008f40      0xc00 load address 0x000000000000a8c0
                0x0000000000008f40                __stack_core2_start__ = .
                0x0000000000009140                . = (. + SVC_STACK_SIZE)
 *fill*         0x0000000000008f40      0x200 
                0x0000000000009140                . = ALIGN (0x4)
                0x0000000000009140                __svc_stack_core2__ = .
                0x0000000000009340                . = (. + IRQ_STACK_SIZE)
 *fill*         0x0000000000009140      0x200 
                0x0000000000009340                . = ALIGN (0x4)
                0x0000000000009340                __irq_stack_core2__ = .
                0x0000000000009540                . = (. + FIQ_STACK_SIZE)
 *fill*         0x0000000000009340      0x200 
                0x0000000000009540                . = ALIGN (0x4)
                0x0000000000009540                __fiq_stack_core2__ = .
                0x0000000000009540                __stacks_core2_end__ = .
                0x0000000000009540                __stack_core3_start__ = .
                0x0000000000009740                . = (. + SVC_STACK_SIZE)
 *fill*         0x0000000000009540      0x200 
                0x0000000000009740                . = ALIGN (0x4)
                0x0000000000009740                __svc_stack_core3__ = .
                0x0000000000009940                . = (. + IRQ_STACK_SIZE)
 *fill*         0x0000000000009740      0x200 
                0x0000000000009940                . = ALIGN (0x4)
                0x0000000000009940                __irq_stack_core3__ = .
                0x0000000000009b40                . = (. + FIQ_STACK_SIZE)
 *fill*         0x0000000000009940      0x200 
                0x0000000000009b40                . = ALIGN (0x4)
                0x0000000000009b40                __fiq_stack_core3__ = .
                0x0000000000009b40                __stacks_core3_end__ = .
                0x000000000000a000                . = ALIGN (0x1000)
                0x000000000000a000                __kernel_heap_start__ = .
                0x0000000000ffffff                . = 0xffffff
                0x0000000000ffffff                __kernel_heap_end__ = .
                0x0000000001000000                . = ALIGN (0x1000)
                0x0000000001000000                __after_kernel_heap__ = .
                0x0000000020000000                . = 0x20000000

.devices        0x0000000020000000   0xffffff
                0x0000000020000000                __devices_start__ = .
                0x0000000020ffffff                . = (. + 0xffffff)
 *fill*         0x0000000020000000   0xffffff 
                0x0000000020ffffff                __devices_end__ = .
OUTPUT(build/kernel.elf elf32-littlearm)

.ARM.attributes
                0x0000000000000000       0x37
 .ARM.attributes
                0x0000000000000000       0x29 build/init.o
 .ARM.attributes
                0x0000000000000029       0x3b build/kmain.o

.comment        0x0000000000000000       0x11
 .comment       0x0000000000000000       0x11 build/kmain.o
                                         0x12 (size before relaxing)

.debug_line     0x0000000000000000      0x1ae
 .debug_line    0x0000000000000000       0xc1 build/init.o
 .debug_line    0x00000000000000c1       0xed build/kmain.o

.debug_info     0x0000000000000000      0x4e2
 .debug_info    0x0000000000000000       0x26 build/init.o
 .debug_info    0x0000000000000026      0x4bc build/kmain.o

.debug_abbrev   0x0000000000000000      0x18e
 .debug_abbrev  0x0000000000000000       0x14 build/init.o
 .debug_abbrev  0x0000000000000014      0x17a build/kmain.o

.debug_aranges  0x0000000000000000       0x40
 .debug_aranges
                0x0000000000000000       0x20 build/init.o
 .debug_aranges
                0x0000000000000020       0x20 build/kmain.o

.debug_str      0x0000000000000000      0x23c
 .debug_str     0x0000000000000000       0x42 build/init.o
 .debug_str     0x0000000000000042      0x1fa build/kmain.o
                                        0x264 (size before relaxing)

.debug_loc      0x0000000000000000      0x2d4
 .debug_loc     0x0000000000000000      0x2d4 build/kmain.o

.debug_ranges   0x0000000000000000       0x68
 .debug_ranges  0x0000000000000000       0x68 build/kmain.o

.debug_frame    0x0000000000000000       0x70
 .debug_frame   0x0000000000000000       0x70 build/kmain.o
